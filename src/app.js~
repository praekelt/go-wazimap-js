go.app = function() {
    var vumigo = require('vumigo_v02');
    var App = vumigo.App;
    var Choice = vumigo.states.Choice;
    var ChoiceState = vumigo.states.ChoiceState;
    var EndState = vumigo.states.EndState;
    var FreeText = vumigo.states.FreeText;
    var MenuChoiceState = go.paginated_extension.MenuChoiceState;

    var GoApp = App.extend(function(self) {
        App.call(self, 'states:start');

        self.states.add('states:start', function(name) {
            return new ChoiceState(name, {
                question: 'Welcome to Wazimap! What would you like to do?',
		
                choices: [
		            new Choice('states:location', 'Enter a location to query'
                    new Choice ('states:randomLocation', 'Query a random location')
                    new Choice('states:end', 'Exit')],

                next: function(choice) {
                   return choice.value;
                }
            });
        });

	    self.states.add('states:location', function(name) {
            return new FreeText(name, {
                question: 'Please enter a location on National, Provincial or Ward level to query:',
                next: function(content) {
                    return 'states:end';
                }   
            });
        }); 
         
        self.states.add('states:randomLocation', function(name) {
            return new EndState(name, {
                text: 'Random locations coming soon!'
            });
        });

       
        self.states.add('states:end', function(name) {
            return new EndState(name, {
                text: 'Thank you for using Wazimap! Find more information on www.wazimap.co.za' 
                next: 'states:start'
            });
        });
    });

    return {
        GoApp: GoApp
    };
}();

//what is function(name/self/choice??)
//States are like functions? Are we wrining everything in terms of states (each state being like a function that does something at a particular point in the program?)
//So right now this is supposed to give welcome message, 3 choices,  
// ask user to enter a location (option 1) and then return that 
//location back to them. 
//How will we return similar options if location is ambiguous? 
//Best way to represent data? Will worry about graphs (potentially later) but should I pick certain data to display
// Where does the actual USSD connection come in? 

//How can I test my code? 

//Check: I'm writing in JS and making use of methods/functions supplied by JS Sandbox toolkit? What exactly is the sandbox toolkit? Way of running JS code, but is it supplying functions via a library? 
//Should I separate my code into different classes? Is there a convention? (Like having object class)

